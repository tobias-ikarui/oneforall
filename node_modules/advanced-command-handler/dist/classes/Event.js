"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Event = void 0;
const CommandHandler_1 = require("../CommandHandler");
const contexts_1 = require("./contexts");
/**
 * @see {@link https://ayfri.gitbook.io/advanced-command-handler/concepts/events}
 */
class Event {
    constructor() {
        /**
         * If the event should be fired only once.
         */
        this.once = false;
    }
    /**
     * Bind the event to the client, when the `something` event from {@link AdvancedClient} will be fire, this event will be also fired.
     *
     * @param client - The client to bind the event from.
     */
    bind(client) {
        const context = new contexts_1.EventContext({
            event: this,
            handler: CommandHandler_1.CommandHandler,
        });
        if (this.once)
            client?.once(this.name, this.run.bind(null, context));
        else
            client?.on(this.name, this.run.bind(null, context));
    }
    /**
     * Unbinds the event to the client.
     *
     * @param client - The client to unbind the event from.
     */
    unbind(client) {
        client.removeListener(this.name, this.run.bind(null, new contexts_1.EventContext({
            event: this,
            handler: CommandHandler_1.CommandHandler,
        })));
    }
}
exports.Event = Event;
